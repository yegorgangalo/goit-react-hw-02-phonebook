{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.jsx","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","experience","licence","nameInputID","uuidv4","numberInputID","handleInputChange","target","code","value","type","checked","setState","addContact","event","preventDefault","props","contacts","some","contact","alert","onSubmit","id","reset","window","addEventListener","this","form","document","querySelector","btnSubmit","className","s","contactForm","labelBlock","htmlFor","title","onChange","radioBlock","inputBox","button","disabled","PureComponent","Filter","ContactList","filterContacts","filter","Object","values","val","toLowerCase","includes","filteredContacts","contactList","map","item","onClick","deleteContact","App","changeFilter","formSubmitHandler","newContact","prevState","withoutDelContactArray","defaultProps","root","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.83ccb5f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"labelBlock\":\"ContactForm_labelBlock__f81Qb\",\"radioBlock\":\"ContactForm_radioBlock__d6RVU\",\"title\":\"ContactForm_title__3MqSl\",\"inputBox\":\"ContactForm_inputBox__1nc3p\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"item\":\"ContactList_item__3YsZK\"};","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends PureComponent {\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n        contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string.isRequired,\n          number: PropTypes.string.isRequired,\n        })),\n    }\n\n    state = {\n      name: '',\n      number:'',\n      experience: '',\n      licence: false,\n    }\n\n    nameInputID = uuidv4()\n    numberInputID = uuidv4()\n\n    componentDidMount(){\n        window.addEventListener('keydown', this.handleInputChange);\n\n        /* щоб форма відправлялась при натисканні Enter лише при фокусі на кнопці сабміт, а не при фокусі будь-де у формі */\n        const form = document.querySelector('form');\n        form.addEventListener('keydown', (event) => {\n        const btnSubmit = form.querySelector('button[type=\"submit\"]');\n        if(event.code === 'Enter' && event.target!==btnSubmit) {\n           event.preventDefault();\n        }\n });\n    }\n\n    // componentWillUnmount() {//не відміняється бо форма не розмонтовується\n    //     window.removeEventListener('keydown', this.handleInputChange);\n    // }\n\n    // shouldComponentUpdate(nextProps, nextState) {//краще юзати PureComponent\n    //     return nextState.experience !== this.state.experience;\n    // }\n\n    handleInputChange = ({ target, code }) => {\n        const { name, value, type, checked } = target;\n        if (code === 'Enter') {\n            this.setState({\n                [name]: type === 'checkbox' ? !checked : value\n            });\n            return;\n        }\n        this.setState({\n            [name]: type === 'checkbox' ? checked : value\n        })\n    }\n\n    addContact = (event) => {\n        event.preventDefault();\n        const { name, number, experience } = this.state;\n\n        if(this.props.contacts.some(contact => contact.name===name || contact.number===number) ){\n          alert(`Contact with such ${name} or ${number} is already in Phonebook`);\n          return;\n        }\n\n        this.props.onSubmit({\n            id: uuidv4(),\n            name: name,\n            number: number,\n            experience: experience,\n        });\n        this.reset();\n    }\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n            experience: '',\n            licence: false,\n        })\n    }\n\n    render() {\n        // console.log(`re-render @ ${Date.now()}`);\n        const { handleInputChange, addContact, nameInputID, numberInputID } = this;\n        const { name, number, experience, licence } = this.state;\n\n        return <form onSubmit={addContact} className={s.contactForm} >\n            <label className={s.labelBlock} htmlFor={nameInputID}>\n                <h3 className={s.title}>Name</h3>\n                <input id={nameInputID} type=\"text\" name=\"name\" value={name} onChange={handleInputChange} />\n            </label>\n            <label className={s.labelBlock} htmlFor={numberInputID}>\n                <h3 className={s.title}>Number</h3>\n                <input id={numberInputID} type=\"text\" name=\"number\" value={number} onChange={handleInputChange}/>\n            </label>\n            <div className={`${s.labelBlock} ${s.radioBlock}`}>\n                <h3 className={s.title}>Your Level</h3>\n                <label>\n                    <input type=\"radio\" className={s.inputBox} name=\"experience\" value=\"junior\" onChange={handleInputChange} checked={experience===\"junior\"} />\n                    junior\n                </label>\n                <label>\n                    <input type=\"radio\" className={s.inputBox} name=\"experience\" value=\"middle\" onChange={handleInputChange} checked={experience===\"middle\"} />\n                    middle\n                </label>\n                <label>\n                    <input type=\"radio\" className={s.inputBox} name=\"experience\" value=\"senior\" onChange={handleInputChange} checked={experience===\"senior\"} />\n                    senior\n                </label>\n            </div>\n            <label  className={s.labelBlock}>\n                <input type=\"checkbox\"  className={s.inputBox} name=\"licence\" onChange={handleInputChange} checked={licence} />\n                Agree with Licence\n            </label>\n\n            <button type=\"submit\"   className={s.button} disabled={!licence || name==='' || number==='' || experience===''}>Add Contact</button>\n        </form>\n    }\n}\n\nexport default ContactForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter ({value, onChange}) {\n        return <div className={s.labelBlock} >\n            <h4  className={s.title}>Find contacts by name, number or level</h4>\n            <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n            </div>\n}\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nclass ContactList extends PureComponent {\n    static propTypes = {\n      deleteContact: PropTypes.func.isRequired,\n      filter: PropTypes.string.isRequired,\n        contacts: PropTypes.arrayOf(\n          PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            experience: PropTypes.string.isRequired,\n        })),\n    }\n\n    filterContacts = () => {\n        const {contacts, filter} = this.props;\n        return contacts.filter(contact =>\n        Object.values(contact).some(val =>\n          val.toLowerCase().includes(filter)));\n    }\n\n    render() {\n        const filteredContacts = this.filterContacts();\n\n        return <ul className={s.contactList} >\n          {filteredContacts.map(({ id, name, number, experience }) =>\n            <li key={id} className={s.item} >\n              <span>{name}:</span>\n              <span>{number},</span>\n              <span>{experience}</span>\n              <button type=\"button\" onClick={()=> this.props.deleteContact(id)} >Delete</button>\n            </li>)}\n        </ul>\n    }\n}\n\nexport default ContactList;","import React, { PureComponent } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends PureComponent {\n    static defaultProps = {\n      contacts: [\n        {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56', experience: 'junior'},\n        {id: 'id-2', name: 'Hermione Kline', number: '443-89-12', experience: 'middle'},\n        {id: 'id-3', name: 'Eden Clements', number: '645-17-79', experience: 'junior'},\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26', experience: 'senior'},\n        {id: 'id-5', name: 'Ann Hits', number: '227-91-46', experience: 'junior'},\n        {id: 'id-6', name: 'Ed Clirence', number: '217-01-46', experience: 'middle'},\n      ],\n    }\n\n    static propTypes = {\n        //\n    }\n\n    state = {\n      contacts: this.props.contacts,\n      filter: '',\n    }\n\n    changeFilter = ({ target: {name, value} }) => {\n      this.setState({\n        [name]: value.toLowerCase(),\n      });\n    }\n\n    formSubmitHandler = (newContact) => {\n        this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, newContact]\n        }\n      })\n    }\n\n    deleteContact = (id) => {\n      this.setState((prevState) => {\n        const withoutDelContactArray = prevState.contacts.filter(contact => contact.id !==id)\n        return {\n          contacts: [...withoutDelContactArray]\n        }\n      })\n    }\n\n    render() {\n      const { contacts, filter } = this.state;\n\n      return (<>\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} contacts={contacts} />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={contacts} filter={filter} deleteContact={this.deleteContact} />\n        </>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root,\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelBlock\":\"Filter_labelBlock__17eMJ\",\"title\":\"Filter_title__mtLuE\"};"],"sourceRoot":""}
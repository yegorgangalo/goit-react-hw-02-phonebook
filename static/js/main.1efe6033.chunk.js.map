{"version":3,"sources":["components/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.jsx","index.js"],"names":["ContactForm","state","name","number","experience","licence","nameInputID","uuidv4","numberInputID","handleInputChange","target","setState","value","addContact","event","preventDefault","props","contacts","some","contact","alert","onSubmit","id","reset","handleLicenceChange","checked","this","htmlFor","type","onChange","disabled","Component","Filter","ContactList","filterContacts","filter","Object","values","val","toLowerCase","includes","filteredContacts","map","onClick","deleteContact","App","changeFilter","formSubmitHandler","newContact","prevState","withoutDelContactArray","defaultProps","root","document","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1efe6033.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass ContactForm extends Component {\n    static propTypes = {\n        //\n    }\n\n    state = {\n      name: '',\n      number:'',\n      experience: '',\n      licence: false,\n    }\n\n    nameInputID = uuidv4()\n    numberInputID = uuidv4()\n\n    handleInputChange = ({ target }) => {\n      this.setState({\n        [target.name]: target.value\n      })\n    }\n\n    addContact = (event) => {\n        event.preventDefault();\n        const { name, number, experience } = this.state;\n\n        if(this.props.contacts.some(contact => contact.name===name || contact.number===number) ){\n          alert(`Contact with such ${name} or ${number} is already in Phonebook`);\n          return;\n        }\n\n        this.props.onSubmit({\n            id: uuidv4(),\n            name: name,\n            number: number,\n            experience: experience,\n        });\n        this.reset();\n    }\n\n    handleLicenceChange = ({target}) => {\n        this.setState({\n            licence: target.checked,\n        })\n    }\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n            experience: '',\n            licence: false,\n        })\n    }\n\n    render() {\n        const {name, number, experience, licence } = this.state;\n        return <form onSubmit={this.addContact}>\n            <label htmlFor={this.nameInputID}>\n                Name\n                <input id={this.nameInputID} type=\"text\" name=\"name\" value={name} onChange={this.handleInputChange} />\n            </label>\n            <label htmlFor={this.numberInputID}>\n                Number\n                <input id={this.numberInputID} type=\"text\" name=\"number\" value={number} onChange={this.handleInputChange}/>\n            </label>\n            <p>Your Level</p>\n            <label>\n                junior\n                <input type=\"radio\" name=\"experience\" value=\"junior\" onChange={this.handleInputChange} checked={this.state.experience===\"junior\"} />\n            </label>\n            <label>\n                middle\n                <input type=\"radio\" name=\"experience\" value=\"middle\" onChange={this.handleInputChange} checked={this.state.experience===\"middle\"} />\n            </label>\n            <label>\n                senior\n                <input type=\"radio\" name=\"experience\" value=\"senior\" onChange={this.handleInputChange} checked={this.state.experience===\"senior\"} />\n            </label>\n            <label>\n                <input type=\"checkbox\" name=\"licence\" value=\"\" onChange={this.handleLicenceChange} checked={this.state.licence} />\n                Згоден з умовами угоди\n            </label>\n\n            <button type=\"submit\" disabled={!licence || name==='' || number==='' || experience===''}>Add Contact</button>\n        </form>\n    }\n}\n\nexport default ContactForm;","import React from 'react';\n\nfunction Filter ({value, onChange}) {\n        return <label>\n            Find contacts by name / number / exp\n            <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n            </label>\n}\n\nexport default Filter;","import React, { Component } from 'react';\n\nclass ContactList extends Component {\n    static propTypes = {\n        //\n    }\n\n    state = {\n\n    }\n\n    filterContacts = () => {\n        const {contacts, filter} = this.props;\n        return contacts.filter(contact =>\n        Object.values(contact).some(val =>\n          val.toLowerCase().includes(filter)));\n    }\n\n    render() {\n        const filteredContacts = this.filterContacts();\n\n        return <ul>\n          {filteredContacts.map(({ id, name, number, experience }) =>\n            <li key={id}>\n              <span>{name}: </span>\n              <span>{number}, </span>\n              <span>{experience};</span>\n              <button type=\"button\" onClick={()=> this.props.deleteContact(id)} >Delete</button>\n            </li>)}\n        </ul>\n    }\n}\n\nexport default ContactList;","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n    static defaultProps = {\n      contacts: [\n        {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56', experience: 'junior'},\n        {id: 'id-2', name: 'Hermione Kline', number: '443-89-12', experience: 'middle'},\n        {id: 'id-3', name: 'Eden Clements', number: '645-17-79', experience: 'junior'},\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26', experience: 'senior'},\n        {id: 'id-5', name: 'Ann', number: '227-91-46', experience: 'junior'},\n      ],\n    }\n\n    static propTypes = {\n        //\n    }\n\n    state = {\n      contacts: this.props.contacts,\n      filter: '',\n    }\n\n    changeFilter = ({ target: {name, value} }) => {\n      this.setState({\n        [name]: value.toLowerCase(),\n      });\n    }\n\n    formSubmitHandler = (newContact) => {\n        this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, newContact]\n        }\n      })\n    }\n\n    deleteContact = (id) => {\n      this.setState((prevState) => {\n        const withoutDelContactArray = prevState.contacts.filter(contact => contact.id !==id)\n        return {\n          contacts: [...withoutDelContactArray]\n        }\n      })\n    }\n\n    render() {\n      const { contacts, filter } = this.state;\n\n      return (<>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} contacts={contacts} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={contacts} filter={filter} deleteContact={this.deleteContact} />\n        </>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root,\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.jsx","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","experience","licence","nameInputID","uuidv4","numberInputID","handleInputChange","target","setState","value","addContact","event","preventDefault","props","contacts","some","contact","alert","onSubmit","id","reset","handleLicenceChange","checked","this","className","s","contactForm","labelBlock","htmlFor","title","type","onChange","radioBlock","inputBox","button","disabled","Component","Filter","ContactList","filterContacts","filter","Object","values","val","toLowerCase","includes","filteredContacts","contactList","map","item","onClick","deleteContact","App","changeFilter","formSubmitHandler","newContact","prevState","withoutDelContactArray","defaultProps","root","document","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.337216f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"labelBlock\":\"ContactForm_labelBlock__f81Qb\",\"radioBlock\":\"ContactForm_radioBlock__d6RVU\",\"title\":\"ContactForm_title__3MqSl\",\"inputBox\":\"ContactForm_inputBox__1nc3p\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"item\":\"ContactList_item__3YsZK\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n        contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n          name: PropTypes.string.isRequired,\n          number: PropTypes.string.isRequired,\n        })),\n    }\n\n    state = {\n      name: '',\n      number:'',\n      experience: '',\n      licence: false,\n    }\n\n    nameInputID = uuidv4()\n    numberInputID = uuidv4()\n\n    handleInputChange = ({ target }) => {\n      this.setState({\n        [target.name]: target.value\n      })\n    }\n\n    addContact = (event) => {\n        event.preventDefault();\n        const { name, number, experience } = this.state;\n\n        if(this.props.contacts.some(contact => contact.name===name || contact.number===number) ){\n          alert(`Contact with such ${name} or ${number} is already in Phonebook`);\n          return;\n        }\n\n        this.props.onSubmit({\n            id: uuidv4(),\n            name: name,\n            number: number,\n            experience: experience,\n        });\n        this.reset();\n    }\n\n    handleLicenceChange = ({target}) => {\n        this.setState({\n            licence: target.checked,\n        })\n    }\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n            experience: '',\n            licence: false,\n        })\n    }\n\n    render() {\n        const { handleInputChange, handleLicenceChange, addContact, nameInputID, numberInputID } = this;\n        const { name, number, experience, licence } = this.state;\n\n        return <form onSubmit={addContact} className={s.contactForm} >\n            <label className={s.labelBlock} htmlFor={nameInputID}>\n                <h3 className={s.title}>Name</h3>\n                <input id={nameInputID} type=\"text\" name=\"name\" value={name} onChange={handleInputChange} />\n            </label>\n            <label className={s.labelBlock} htmlFor={numberInputID}>\n                <h3 className={s.title}>Number</h3>\n                <input id={numberInputID} type=\"text\" name=\"number\" value={number} onChange={handleInputChange}/>\n            </label>\n            <div className={`${s.labelBlock} ${s.radioBlock}`}>\n                <h3 className={s.title}>Your Level</h3>\n                <label>\n                    <input type=\"radio\" className={s.inputBox} name=\"experience\" value=\"junior\" onChange={handleInputChange} checked={experience===\"junior\"} />\n                    junior\n                </label>\n                <label>\n                    <input type=\"radio\" className={s.inputBox} name=\"experience\" value=\"middle\" onChange={handleInputChange} checked={experience===\"middle\"} />\n                    middle\n                </label>\n                <label>\n                    <input type=\"radio\" className={s.inputBox} name=\"experience\" value=\"senior\" onChange={handleInputChange} checked={experience===\"senior\"} />\n                    senior\n                </label>\n            </div>\n            <label  className={s.labelBlock}>\n                <input type=\"checkbox\"  className={s.inputBox} name=\"licence\" value=\"\" onChange={handleLicenceChange} checked={licence} />\n                Agree with Licence\n            </label>\n\n            <button type=\"submit\"   className={s.button} disabled={!licence || name==='' || number==='' || experience===''}>Add Contact</button>\n        </form>\n    }\n}\n\nexport default ContactForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter ({value, onChange}) {\n        return <div className={s.labelBlock} >\n            <h4  className={s.title}>Find contacts by name, number or level</h4>\n            <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n            </div>\n}\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nclass ContactList extends Component {\n    static propTypes = {\n      deleteContact: PropTypes.func.isRequired,\n      filter: PropTypes.string.isRequired,\n        contacts: PropTypes.arrayOf(\n          PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            experience: PropTypes.string.isRequired,\n        })),\n    }\n\n    filterContacts = () => {\n        const {contacts, filter} = this.props;\n        return contacts.filter(contact =>\n        Object.values(contact).some(val =>\n          val.toLowerCase().includes(filter)));\n    }\n\n    render() {\n        const filteredContacts = this.filterContacts();\n\n        return <ul className={s.contactList} >\n          {filteredContacts.map(({ id, name, number, experience }) =>\n            <li key={id} className={s.item} >\n              <span>{name}:</span>\n              <span>{number},</span>\n              <span>{experience}</span>\n              <button type=\"button\" onClick={()=> this.props.deleteContact(id)} >Delete</button>\n            </li>)}\n        </ul>\n    }\n}\n\nexport default ContactList;","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n    static defaultProps = {\n      contacts: [\n        {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56', experience: 'junior'},\n        {id: 'id-2', name: 'Hermione Kline', number: '443-89-12', experience: 'middle'},\n        {id: 'id-3', name: 'Eden Clements', number: '645-17-79', experience: 'junior'},\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26', experience: 'senior'},\n        {id: 'id-5', name: 'Ann Hits', number: '227-91-46', experience: 'junior'},\n        {id: 'id-6', name: 'Ed Clirence', number: '217-01-46', experience: 'middle'},\n      ],\n    }\n\n    static propTypes = {\n        //\n    }\n\n    state = {\n      contacts: this.props.contacts,\n      filter: '',\n    }\n\n    changeFilter = ({ target: {name, value} }) => {\n      this.setState({\n        [name]: value.toLowerCase(),\n      });\n    }\n\n    formSubmitHandler = (newContact) => {\n        this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, newContact]\n        }\n      })\n    }\n\n    deleteContact = (id) => {\n      this.setState((prevState) => {\n        const withoutDelContactArray = prevState.contacts.filter(contact => contact.id !==id)\n        return {\n          contacts: [...withoutDelContactArray]\n        }\n      })\n    }\n\n    render() {\n      const { contacts, filter } = this.state;\n\n      return (<>\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} contacts={contacts} />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={contacts} filter={filter} deleteContact={this.deleteContact} />\n        </>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root,\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelBlock\":\"Filter_labelBlock__17eMJ\",\"title\":\"Filter_title__mtLuE\"};"],"sourceRoot":""}